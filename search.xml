<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[HDOJ 5821 Ball (16多校day801)]]></title>
      <url>http://polebug.github.io/2016/08/13/HDOJ-5821-Ball-16%E5%A4%9A%E6%A0%A1day801/</url>
      <content type="html"><![CDATA[<p></p><h2>题意</h2><br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://acm.hdu.edu.cn/showproblem.php?pid=5821" target="_blank" rel="external">题目传送门</a><br>&nbsp;&nbsp;&nbsp;&nbsp;题意：有n个盒子，每个盒子最多装下一个球。用a[i]表示每个盒子中球的状态。现在给出m个区间，可以在给出的区间任意改变a[i]的顺序。询问能否使a[i]等于b[i]。<br><a id="more"></a><p></p>
<p></p><h2>题解</h2><br>&nbsp;&nbsp;&nbsp;&nbsp;看了<a href="http://bestcoder.hdu.edu.cn/blog/" target="_blank" rel="external">官方题解</a>才知道是贪心，觉得很巧妙，在此胡口一波。<p></p>
<p></p><h3>下标原理</h3><br>&nbsp;&nbsp;&nbsp;&nbsp;要使a[i]等于b[i]，球的颜色是一个很大的干扰。然而，对于同色球而言，（例如有4个全为红色的球），标记为1,2,3,4.从a[i]到b[i]一定存在一种方案，使得这个顺序不发生改变。也就是说，同色球可以处理成若干个不同色球。<br>&nbsp;&nbsp;&nbsp;&nbsp;对于整个a[i]而言，即有n个不同色球。<p></p>
<p></p><h3>贪心的实现</h3><br>&nbsp;&nbsp;&nbsp;&nbsp;首先，分别将a[i],b[i]标记为1.2.3…n；根据a[i],b[i]球的状态进行sort排序（即是否有球以及球的颜色）；<br>&nbsp;&nbsp;&nbsp;&nbsp;其次，对a[i]重编号：进行逐一对比，若a[i]和b[i]的状态相同，则令c[a[i]标记]=b[i]标记；（c[i]即为a[i]重编号后的标记）<br>&nbsp;&nbsp;&nbsp;&nbsp;最后，在给出的区间进行sort排序。验证c[i]是否等于b[i]，即c[i]是否满足1.2.3…n;<p></p>
<p></p><h2>代码如下</h2><br>亲测AC<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> N <span class="number">100000</span>+<span class="number">10</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> c[N];</span><br><span class="line">pair &lt;<span class="keyword">int</span> ,<span class="keyword">int</span>&gt; A[N],B[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">            <span class="keyword">int</span> x;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">            A[i].first=x;</span><br><span class="line">            A[i].second=i; </span><br><span class="line">        &#125;</span><br><span class="line">        sort(A+<span class="number">1</span>,A+<span class="number">1</span>+n);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">            <span class="keyword">int</span> x;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">            B[i].first=x;</span><br><span class="line">            B[i].second=i;</span><br><span class="line">        &#125;</span><br><span class="line">        sort(B+<span class="number">1</span>,B+<span class="number">1</span>+n);<span class="comment">//将a[i],b[i]编号并排序 </span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">bool</span> flag=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n &amp;&amp; flag;++i)</span><br><span class="line">            <span class="keyword">if</span>(A[i].first!=B[i].first) flag=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">else</span> c[A[i].second]=B[i].second;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将a[i]重编号</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">            <span class="keyword">int</span> x,y;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</span><br><span class="line">            sort(c+x,c+y+<span class="number">1</span>);</span><br><span class="line">        &#125;<span class="comment">//在给定的区间排序 </span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n &amp;&amp; flag;++i)</span><br><span class="line">            <span class="keyword">if</span>(c[i]!=i) flag=<span class="number">0</span>;</span><br><span class="line">        <span class="comment">//验证最后的标号是否满足1.2.3...n </span></span><br><span class="line">            </span><br><span class="line">        <span class="keyword">if</span>(flag) <span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;多校渐入尾声，晚上翻了翻各种多校敲的代码，自觉多校虽难但同样受益匪浅。（希望不是最后一次多校啊啊啊）最近想整理多校题,BC,CF代码，写写题解<br>&nbsp;&nbsp;&nbsp;&nbsp;重新开始写题解，其中一个原因是自己不想把所敲的代码扔的到处都是，最后不知所云；另一个原因是，我最近意识到自己思考题目以及赛后对于题解的利用有问题。我记得我上次问帅副题目，总是问这个算法具体是啥样的啊怎么敲啊，结果帅副说你首先要明白这样做为什么是对的，再去想如何实现。之后想了想，确实有道理。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;最后，以上若有不对的地方，欢迎指正。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[hello world]]></title>
      <url>http://polebug.github.io/2016/01/08/hello-world/</url>
      <content type="html"><![CDATA[<p></p><h1>对于新主题的各种测试</h1><br>本站于8.5开始采用yelee主题，相关安装以及使用说明详见 <a href="http://moxfive.coding.me/yelee" target="_blank" rel="external">http://moxfive.coding.me/yelee</a><br>本文用于各种text，无实质性内容<br><a id="more"></a><p></p>
<p></p><h2>代码高亮测试</h2><br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">hello</span> world</span><br></pre></td></tr></table></figure><p></p>
<p></p><h2>引用测试</h2><p></p>
<blockquote>
<p>interesting</p>
</blockquote>
<p></p><h2>完成文章目录相关测试</h2><br>详见左侧的文章目录相关测试<p></p>
<p></p><h1>说点啥</h1><br>这个主题真是太棒了，几乎完美<br>主要是三个方面做的很棒：1.风格，样式舒服； 2.作者教程写的很详细了，避免了以前改参数之后莫名error的情况。再次感谢一下；3.自由度高，包含了我想添加的一切东西，包括多说，百度分享，不蒜子统计，还有像文章目录这样东西；<br>总之，向作者比心~<p></p>
<p>最后就是，终于有写题解的地方了（高亮也ok，万事俱备啦）<br>博客园那货就暂且扔了吧，最近老被别人翻出来，我都不敢写东西了2333</p>
]]></content>
    </entry>
    
  
  
</search>
