<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[python学习笔记（一）：基础语法]]></title>
      <url>http://polebug.github.io/2016/10/21/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</url>
      <content type="html"><![CDATA[<p>装了python2.7，去图书馆借了python入门经典，暂且简单写下学习笔记，以供自己回忆</p>
<h2>python中数字的使用</h2><br> <h3>变量类型</h3><br>int,float,string就不说了<br>这里注意下面几种类型的使用：<a id="more"></a><br>　　<code>long</code>：长整型(不是long long)，最长的数字的长度取决于计算机有多大的内存；<br>　　<code>list</code> ：功能类似于数组，用[]表示，里面的值可以改变；<br>　　<code>tuple</code>：用()表示，里面的值不可以改变；<br>　　<code>dictionary</code>：可列出已经配对的键和值；<br>(查看变量类型，可用type()查看)<br><br><li>支持强制转换变量类型，例如float(2)；</li><br><br><h3>变量命名</h3><br><li>python对于变量名的限制：不能用数字开头，不能过长，不能包括特殊符号(除下划线)；</li><br><li>对于变量命名的特殊点：大多数情况下变量名全部是小写。若不想变量的值被修改，才把变量名全部大写，作为一个常量；<br></li><br><h3>数学运算</h3><br>基本运算没见过的就是：floor除法的符号为//，求幂的符号为**；<br>运算优先级以及比较问题就不说了<br><br><h2>python中string的使用</h2>

<li>字符串创建，用’ ‘或者” “都可以进行赋值</li><br><li>识别大小写和空格</li>

<p></p><h3>字符串有关的函数使用：</h3><br>　　<code>len()</code>：返回字符串长度；<br>　　<code>.upper()</code>：全部转换成大写；<br>　　<code>.lower()</code>：全部转换成小写；<br>　　<code>.capitalize()</code>：把首字母转换成大写，其余转换成小写；<br>　　<code>.title()</code>：把首字母以及每个空格或者标点符号后的字母转换成大写，其余字母转换成小写；<br>　　<code>is_alpha()</code>：检查一个字符串是否全由字母组成；<br>　　<code>.strip()</code>：<br>　　　　1.删除字符串开头和结尾的所有空格；<br>　　　　2.删除指定的字符，例如：.strip(‘*’)；<br>　　　　3.rstrip()只删除开头的字符；.lstrip()只删除结尾的字符；<br>　　<code>.count(‘   ‘)</code>：返回一个字符串在另一个字符串中出现的次数；<br>　　<code>.find(‘   ‘)</code>：返回某个字符串第一次出现的位置，若没有找到返回-1；<br>　　<code>.replace(‘string1’, ‘string2’)</code>：将string1替换为string2；<br>注：使用这些函数之后，字符串自身的值并未发生改变<p></p>
<p></p><h3>字符串的运算：</h3><p></p>
<p><li>加法： (string) + (string)<br>　　　　(string) + “   “ +(string)</li></p>
<p><li>乘法： (string)*(int)<br>　　　　其中int得是非负整数</li></p>
<p><li>不存在减法和除法运算</li></p>
<p>　　　</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[2016多校前的热身赛 1002 Circle Problem]]></title>
      <url>http://polebug.github.io/2016/08/15/2016%E5%A4%9A%E6%A0%A1%E5%89%8D%E7%9A%84%E7%83%AD%E8%BA%AB%E8%B5%9B-1002-Circle-Problem/</url>
      <content type="html"><![CDATA[<p>若有错误的地方，欢迎指正</p>
<p></p><h2>题意</h2><br>&nbsp;&nbsp;&nbsp;&nbsp;突然想想写这题的题解，发现老刘赛后没放出来….不过还好我有随手收藏题的习惯，当时截了图，原题如图所示<br><a id="more"></a><br>&nbsp;&nbsp;&nbsp;&nbsp;（看着有点丑…<br><img src="http://7x2wrf.com1.z0.glb.clouddn.com/QQ%E5%9B%BE%E7%89%8720160815003825.png" alt="原图"><br>&nbsp;&nbsp;&nbsp;&nbsp;题意：给出n个点的坐标，问是否存在一个圆，满足n/3个点都在这个圆上；<p></p>
<p></p><h2>题解</h2><br>&nbsp;&nbsp;&nbsp;&nbsp;思路：显然，枚举三个点，找到一个圆，然后逐一验证是否满足题意的做法会超时。那么：<br>&nbsp;&nbsp;&nbsp;&nbsp;1.考虑优化枚举点的复杂度：假设存在满足题意的圆，那么1/3的点在这个圆上。由于三点确定一个圆，那么找到这个圆的概率为1/3 x 1/3 x 1/3；理论上，随机找三个点有1/27的概率找到这个圆，保险起见我们考虑找500次左右。<br>&nbsp;&nbsp;&nbsp;&nbsp;2.已知三个点的坐标求解圆的方程：推导详见<a href="http://blog.sina.com.cn/s/blog_9d6efbb301018nzh.html" target="_blank" rel="external">此博客</a>，简单的说是消参，对于局部式子设变量求解；<br>&nbsp;&nbsp;&nbsp;&nbsp;3.逐一验证剩余的点即可；<br>&nbsp;&nbsp;&nbsp;&nbsp;4.细节：对于浮点数，取绝对值用fabs；验证点到圆心的距离时，比较精度为1e5，根据提交情况进行调整即可；<p></p>
<p></p><h2>相关算法</h2><p></p>
<p></p><h3>随机化</h3><br>算是学习了一下，用起来很简单：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="preprocessor">#inlcude&lt;ctime&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	srand(time(<span class="number">0</span>));</span><br><span class="line">	<span class="keyword">int</span> x=rand()%n+<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p>
<p></p><h2>代码如下</h2><br>亲测AC<p></p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">double</span> x[<span class="number">30001</span>],y[<span class="number">30001</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	freopen(<span class="string">"data.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">int</span> T,n;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">	<span class="keyword">while</span>(T--)&#123;</span><br><span class="line">	    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">	    <span class="built_in">memset</span>(x,<span class="number">0</span>,<span class="keyword">sizeof</span>(x));</span><br><span class="line">	    <span class="built_in">memset</span>(y,<span class="number">0</span>,<span class="keyword">sizeof</span>(y));</span><br><span class="line">	    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>,&amp;x[i],&amp;y[i]);</span><br><span class="line">	    srand(time(<span class="number">0</span>));</span><br><span class="line">	    <span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line">	    </span><br><span class="line">	    <span class="keyword">for</span>(<span class="keyword">int</span> t=<span class="number">1</span>;t&lt;=<span class="number">500</span>;t++)&#123;</span><br><span class="line">	    	<span class="keyword">int</span> i=rand()%n+<span class="number">1</span>;</span><br><span class="line">			<span class="keyword">int</span> j=rand()%n+<span class="number">1</span>;</span><br><span class="line">			<span class="keyword">int</span> k=rand()%n+<span class="number">1</span>;</span><br><span class="line">		    <span class="keyword">double</span> a=<span class="number">2</span>*(x[j]-x[i]);</span><br><span class="line">		    <span class="keyword">double</span> b=<span class="number">2</span>*(y[j]-y[i]);</span><br><span class="line">		    <span class="keyword">double</span> c=x[j]*x[j]+y[j]*y[j]-x[i]*x[i]-y[i]*y[i];</span><br><span class="line">		    <span class="keyword">double</span> d=<span class="number">2</span>*(x[k]-x[j]);</span><br><span class="line">		    <span class="keyword">double</span> e=<span class="number">2</span>*(y[k]-y[j]);</span><br><span class="line">		    <span class="keyword">double</span> f=x[k]*x[k]+y[k]*y[k]-x[j]*x[j]-y[j]*y[j];</span><br><span class="line">		    <span class="keyword">double</span> x0=(b*f-e*c)/(b*d-e*a);</span><br><span class="line">		    <span class="keyword">double</span> y0=(d*c-a*f)/(b*d-e*a);</span><br><span class="line">		    <span class="keyword">double</span> r=<span class="built_in">sqrt</span>((x0-x[i])*(x0-x[i])+(y0-y[i])*(y0-y[i]));</span><br><span class="line">			<span class="keyword">int</span> tot=<span class="number">0</span>;</span><br><span class="line">	        </span><br><span class="line">	        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">	        	<span class="keyword">double</span> d2=<span class="built_in">sqrt</span>((x[i] - x0) * (x[i] - x0) + (y[i] - y0) * (y[i] - y0));</span><br><span class="line">	        	<span class="keyword">if</span>(<span class="built_in">abs</span>(d2 - r) &lt;= <span class="number">1e-5</span>) tot++;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">int</span> judge=n/<span class="number">3</span>;</span><br><span class="line">			<span class="keyword">if</span>(judge&lt;=tot)&#123;</span><br><span class="line">				flag=<span class="number">1</span>;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">	    &#125;</span><br><span class="line">	    <span class="keyword">if</span>(flag) <span class="built_in">printf</span>(<span class="string">"YOUGE\n"</span>); <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"NIUGE\n"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[HDOJ 5726 GCD (16多校day1 1004)]]></title>
      <url>http://polebug.github.io/2016/08/14/HDOJ-5726-GCD-16%E5%A4%9A%E6%A0%A1day1-1004/</url>
      <content type="html"><![CDATA[<p>若有错误的地方，欢迎指正</p>
<p></p><h2>题意</h2><br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://acm.hdu.edu.cn/showproblem.php?pid=5726" target="_blank" rel="external">题目传送门</a><br>&nbsp;&nbsp;&nbsp;&nbsp;题意：给出n个数，做m次询问。对于所给区间，找出[l,r]的gcd(最大公约数)，求出1~n中，区间的gcd与之相等的区间个数。<br><a id="more"></a><p></p>
<p></p><h2>题解</h2><br>思路：<br>&nbsp;&nbsp;&nbsp;&nbsp;首先根据数据范围，对于区间的gcd值的维护，考虑线段树或RMQ；<br>&nbsp;&nbsp;&nbsp;&nbsp;然后，对于所有区间的gcd，我们需要预处理出来。具体实现：考虑枚举左端点，二分区间（注意gcd值单调），算出以这个点为左端点的区间有哪些gcd值，用map记录下相同gcd的区间个数；<p></p>
<p></p><h2>相关算法参考</h2><br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://polebug.science/2016/08/13/%E5%AF%B9%E4%BA%8ERMQ%E9%97%AE%E9%A2%98%E7%9A%84%E7%90%86%E8%A7%A3%E5%8F%8A%E8%BF%90%E7%94%A8/" target="_blank" rel="external">RMQ算法的ST算法</a><br>&nbsp;&nbsp;&nbsp;&nbsp;二分<p></p>
<p></p><h2>代码</h2><br>亲测AC<p></p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Maxn=<span class="number">100000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="built_in">map</span> &lt;<span class="keyword">int</span> , <span class="keyword">long</span> <span class="keyword">long</span>&gt; Q;</span><br><span class="line"><span class="keyword">int</span> dp[Maxn][<span class="number">20</span>],a[Maxn],T,n,m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> b == <span class="number">0</span> ? a : gcd(b,a%b); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RMQ</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123; <span class="comment">//用RMQ维护区间gcd值； </span></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) dp[i][<span class="number">0</span>]=a[i];</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;(<span class="number">1</span>&lt;&lt;j)&lt;=n;j++)</span><br><span class="line">	    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i+(<span class="number">1</span>&lt;&lt;j)-<span class="number">1</span>&lt;=n;i++) </span><br><span class="line">		dp[i][j]=gcd(dp[i][j-<span class="number">1</span>],dp[i+(<span class="number">1</span>&lt;&lt;(j-<span class="number">1</span>))][j-<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;<span class="comment">//询问区间gcd值； </span></span><br><span class="line">	<span class="keyword">int</span> tmp=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span>((<span class="number">1</span>&lt;&lt;(tmp+<span class="number">1</span>))&lt;=r-l+<span class="number">1</span>) tmp++;</span><br><span class="line">	<span class="keyword">return</span> gcd(dp[l][tmp],dp[r-(<span class="number">1</span>&lt;&lt;tmp)+<span class="number">1</span>][tmp]);</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123; <span class="comment">//二分区间预处理； </span></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="keyword">int</span> j=i;</span><br><span class="line">		<span class="keyword">while</span>(j&lt;=n)&#123;</span><br><span class="line">			<span class="keyword">int</span> l=j,r=n,sum;</span><br><span class="line">			<span class="keyword">int</span> x=query(i,j);</span><br><span class="line">			</span><br><span class="line">			<span class="keyword">while</span>(r&gt;=l)&#123;</span><br><span class="line">				<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">				<span class="keyword">if</span>(query(i,mid) == x)&#123;</span><br><span class="line">					sum=mid;</span><br><span class="line">					l=mid+<span class="number">1</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span> r=mid-<span class="number">1</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			Q[x]+=sum-j+<span class="number">1</span>;<span class="comment">//记录下以x为gcd值的区间个数 </span></span><br><span class="line">			j=sum+<span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="comment">//freopen("data.txt","r",stdin);</span></span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=T;k++)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">		Q.clear();</span><br><span class="line">		<span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="keyword">sizeof</span>(dp));</span><br><span class="line">		</span><br><span class="line">		RMQ(n);</span><br><span class="line">		solve();	</span><br><span class="line">		</span><br><span class="line">	    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);</span><br><span class="line">	    <span class="built_in">printf</span>(<span class="string">"Case #%d:\n"</span>,k);</span><br><span class="line">	    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">	    	<span class="keyword">int</span> l,r;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;l,&amp;r);</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"%d %I64d\n"</span>,query(l,r),Q[query(l,r)]);</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[对于RMQ问题的ST算法的理解及运用]]></title>
      <url>http://polebug.github.io/2016/08/13/%E5%AF%B9%E4%BA%8ERMQ%E9%97%AE%E9%A2%98%E7%9A%84%E7%90%86%E8%A7%A3%E5%8F%8A%E8%BF%90%E7%94%A8/</url>
      <content type="html"><![CDATA[<p>裸算法系列<br><a id="more"></a></p>
<p></p><h1>Problem Description</h1><br>&nbsp;&nbsp;&nbsp;&nbsp;RMQ (Range Minimum/Maximun Query),即区间最值问题；<p></p>
<p></p><h1>Algorithm</h1><br>ST (Sparse Table,稀疏表) Algorithm,O(nlogn)预处理,O(1)查询；<p></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[位运算理解及运用(未填完)]]></title>
      <url>http://polebug.github.io/2016/08/13/%E4%BD%8D%E8%BF%90%E7%AE%97%E7%90%86%E8%A7%A3%E5%8F%8A%E8%BF%90%E7%94%A8-%E6%9C%AA%E5%A1%AB%E5%AE%8C/</url>
      <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;最近渐渐发现位运算的重要性，鉴于之前没有好好学习位运算，打算在此慢慢补充位运算的学习资料以及算法上的运用，帮助自己更深的理解位运算的本质并熟练掌握<br><a id="more"></a></p>
<p></p><h1>学习资料</h1><br><a href="https://zh.wikipedia.org/wiki/%E4%BD%8D%E6%93%8D%E4%BD%9C" target="_blank" rel="external">对于基本位运算的解释(维基百科)</a><p></p>
<p></p><h1>算法上的运用</h1><br>(待添加相关模板)<br><a href="http://polebug.science/2016/08/13/%E5%AF%B9%E4%BA%8ERMQ%E9%97%AE%E9%A2%98%E7%9A%84%E7%90%86%E8%A7%A3%E5%8F%8A%E8%BF%90%E7%94%A8/" target="_blank" rel="external">RMQ问题的ST算法</a><br>快速幂<p></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[HDOJ 5821 Ball (16多校day8 1001)]]></title>
      <url>http://polebug.github.io/2016/08/13/HDOJ-5821-Ball-16%E5%A4%9A%E6%A0%A1day8-1001/</url>
      <content type="html"><![CDATA[<p></p><h2>题意</h2><br>&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://acm.hdu.edu.cn/showproblem.php?pid=5821" target="_blank" rel="external">题目传送门</a><br>&nbsp;&nbsp;&nbsp;&nbsp;题意：有n个盒子，每个盒子最多装下一个球。用a[i]表示每个盒子中球的状态。现在给出m个区间，可以在给出的区间任意改变a[i]的顺序。询问能否使a[i]等于b[i]。<br><a id="more"></a><p></p>
<p></p><h2>题解</h2><br>&nbsp;&nbsp;&nbsp;&nbsp;看了<a href="http://bestcoder.hdu.edu.cn/blog/" target="_blank" rel="external">官方题解</a>才知道是贪心，觉得很巧妙，在此胡口一波。<p></p>
<p></p><h3>下标原理</h3><br>&nbsp;&nbsp;&nbsp;&nbsp;要使a[i]等于b[i]，球的颜色是一个很大的干扰。然而，对于同色球而言，（例如有4个全为红色的球），标记为1,2,3,4.从a[i]到b[i]一定存在一种方案，使得这个顺序不发生改变。也就是说，同色球可以处理成若干个不同色球。<br>&nbsp;&nbsp;&nbsp;&nbsp;对于整个a[i]而言，即有n个不同色球。<p></p>
<p></p><h3>贪心的实现</h3><br>&nbsp;&nbsp;&nbsp;&nbsp;首先，分别将a[i],b[i]标记为1.2.3…n；根据a[i],b[i]球的状态进行sort排序（即是否有球以及球的颜色）；<br>&nbsp;&nbsp;&nbsp;&nbsp;其次，对a[i]重编号：进行逐一对比，若a[i]和b[i]的状态相同，则令c[a[i]标记]=b[i]标记；（c[i]即为a[i]重编号后的标记）<br>&nbsp;&nbsp;&nbsp;&nbsp;最后，在给出的区间进行sort排序。验证c[i]是否等于b[i]，即c[i]是否满足1.2.3…n;<p></p>
<p></p><h2>代码如下</h2><br>亲测AC<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> N <span class="number">100000</span>+<span class="number">10</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> c[N];</span><br><span class="line">pair &lt;<span class="keyword">int</span> ,<span class="keyword">int</span>&gt; A[N],B[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">            <span class="keyword">int</span> x;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">            A[i].first=x;</span><br><span class="line">            A[i].second=i; </span><br><span class="line">        &#125;</span><br><span class="line">        sort(A+<span class="number">1</span>,A+<span class="number">1</span>+n);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">            <span class="keyword">int</span> x;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">            B[i].first=x;</span><br><span class="line">            B[i].second=i;</span><br><span class="line">        &#125;</span><br><span class="line">        sort(B+<span class="number">1</span>,B+<span class="number">1</span>+n);<span class="comment">//将a[i],b[i]编号并排序 </span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">bool</span> flag=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n &amp;&amp; flag;++i)</span><br><span class="line">            <span class="keyword">if</span>(A[i].first!=B[i].first) flag=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">else</span> c[A[i].second]=B[i].second;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将a[i]重编号</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">            <span class="keyword">int</span> x,y;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</span><br><span class="line">            sort(c+x,c+y+<span class="number">1</span>);</span><br><span class="line">        &#125;<span class="comment">//在给定的区间排序 </span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n &amp;&amp; flag;++i)</span><br><span class="line">            <span class="keyword">if</span>(c[i]!=i) flag=<span class="number">0</span>;</span><br><span class="line">        <span class="comment">//验证最后的标号是否满足1.2.3...n </span></span><br><span class="line">            </span><br><span class="line">        <span class="keyword">if</span>(flag) <span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;多校渐入尾声，晚上翻了翻各种多校敲的代码，自觉多校虽难但同样受益匪浅。（希望不是最后一次多校啊啊啊）最近想整理多校题,BC,CF代码，写写题解<br>&nbsp;&nbsp;&nbsp;&nbsp;重新开始写题解，其中一个原因是自己不想把所敲的代码扔的到处都是，最后不知所云；另一个原因是，我最近意识到自己思考题目以及赛后对于题解的利用有问题。我记得我上次问帅副题目，总是问这个算法具体是啥样的啊怎么敲啊，结果帅副说你首先要明白这样做为什么是对的，再去想如何实现。之后想了想，确实有道理。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;最后，以上若有不对的地方，欢迎指正。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[hello world]]></title>
      <url>http://polebug.github.io/2016/01/08/hello-world/</url>
      <content type="html"><![CDATA[<p></p><h1>对于新主题的各种测试</h1><br>本站于8.5开始采用yelee主题，相关安装以及使用说明详见 <a href="http://moxfive.coding.me/yelee" target="_blank" rel="external">http://moxfive.coding.me/yelee</a><br>本文用于各种text，无实质性内容<br><a id="more"></a><p></p>
<p></p><h2>代码高亮测试</h2><br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">hello</span> world</span><br></pre></td></tr></table></figure><p></p>
<p></p><h2>引用测试</h2><p></p>
<blockquote>
<p>interesting</p>
</blockquote>
<p></p><h2>完成文章目录相关测试</h2><br>详见左侧的文章目录相关测试<p></p>
<p></p><h1>说点啥</h1><br>这个主题真是太棒了，几乎完美<br>主要是三个方面做的很棒：1.风格，样式舒服； 2.作者教程写的很详细了，避免了以前改参数之后莫名error的情况。再次感谢一下；3.自由度高，包含了我想添加的一切东西，包括多说，百度分享，不蒜子统计，还有像文章目录这样东西；<br>总之，向作者比心~<p></p>
<p>最后就是，终于有写题解的地方了（高亮也ok，万事俱备啦）<br>博客园那货就暂且扔了吧，最近老被别人翻出来，我都不敢写东西了2333</p>
]]></content>
    </entry>
    
  
  
</search>
